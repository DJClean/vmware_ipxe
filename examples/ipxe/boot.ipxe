#!ipxe
set menu-timeout 60000
set submenu-timeout ${menu-timeout}
set menu-default exit

## Boot Menu

:start
menu iPXE Network menu
item --gap --   --------- iPXE Network menu ---------
item dhcp-1   DHCP Boot VLAN 1
item
item start_pxe  Start PXE Boot
item
item shell      Drop to iPXE Shell
item exit       Boot System
choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:cancel
echo Cancelled the menu, dropping to a shell

:shell
echo Type 'exit' to get back to the menu
shell
set menu-timeout 0
set submenu-timeout
goto start

:failed
echo Booting failed, dropping to a shell
goto shell

:reboot
reboot

:exit
exit

:dhcp-1
vcreate -t 1 net0
dhcp net0-1
iseq ${gateway} 192.168.1.1 && goto start_pxe ||
goto failed


:start_pxe
# Global variables used by all other iPXE scripts
chain --autofree boot.ipxe.cfg ||

# Boot <boot-url>/<boot-dir>/hostname-<hostname>.ipxe
# if hostname DHCP variable is set and script is present
isset ${hostname} && chain --replace --autofree ${boot-url}hostname-${hostname}.ipxe ||

# Boot <boot-url>/<boot-dir>/uuid-<UUID>.ipxe
# if SMBIOS UUID variable is set and script is present
isset ${uuid} && chain --replace --autofree ${boot-url}uuid-${uuid}.ipxe ||

# Boot <boot-url>/<boot-dir>/mac-010203040506.ipxe if script is present
chain --replace --autofree ${boot-url}mac-${mac:hexraw}.ipxe ||

# Boot <boot-url>/<boot-dir>/pci-8086100e.ipxe if one type of
# PCI Intel adapter is present and script is present
chain --replace --autofree ${boot-url}pci-${pci/${busloc}.0.2}${pci/${busloc}.2.2}.ipxe ||

# Boot <boot-url>/<boot-dir>/chip-82541pi.ipxe if one type of
# PCI Intel adapter is present and script is present
chain --replace --autofree ${boot-url}chip-${chip}.ipxe ||

# Boot <boot-url>/menu.ipxe script if all other options have been exhausted
chain --replace --autofree ${menu-url} ||

# chain --autofree boot.ipxe.cfg
shell
